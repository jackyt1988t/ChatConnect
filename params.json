{
  "name": "Websocket",
  "tagline": "WebSocket",
  "body": "# MyWebSocket\r\n## WebSocket Server написанный на языке c#.\r\n<div>\r\n\tПоддержка .NET Framework 4.5, Mono 4.2 <br>\r\n\thttp://jackyt1988t.github.io/WebSocket <br>\r\n\tВ данный момент поддерживается: <br>\r\n\tWebSocket Протокол Sample - требует тестов https://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-03 <br>\r\n\tWebSocket Протокол №13(RFC6455) - требует тестов https://tools.ietf.org/html/rfc6455 <br>\r\n\tПланируетсЯ поддержка всех протоколов.\r\n\tПример простейшего WebSocket echo сервера <br> \r\n\tДанный пример показывает как запустить  WebSocket Сервер и зарегистировать обработчики событий\r\n</div>\r\n```C#\r\nusing System;\r\nusing System.Text;\r\n\r\nusing ChatConnect.Tcp;\r\nusing ChatConnect.Tcp.Protocol;\r\nusing ChatConnect.Tcp.Protocol.WS;\r\n\r\n// Включить вывод отладочной информации\r\nWS.Debug = true; \r\nWS.EventConnect += (object obj, PEventArgs a) =>\r\n{\r\n\t// Объект WebSocket\r\n\tWS WebSocket = obj as WS;\r\n\t// Событие наступает когда приходят новые данные\r\n\tWebSocket.EventData += (object sender, PEventArgs e) =>\r\n\t{\r\n\t\tWSData data = e.sender as WSData;\r\n\t\tif (data.Opcod != WSOpcod.Text)\r\n\t\t{\r\n\t\t\tbyte[] raw = data.ToByte(); \r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tConsole.WriteLine(data.ToString());\r\n\t\t\t// Отправляем текстовый фрейм\r\n\t\t\tWebSocket.Message(data.ToString());\r\n\t\t}\r\n\t};\r\n\t// Событие наступает если произошла ошибка данных\r\n\tWebSocket.EventError += (object sender, PEventArgs e) =>\r\n\t{\r\n\t\tConsole.WriteLine(e.sender.ToString());\r\n\t};\r\n\t// Событие наступает если соединение было закрыто\r\n\tWebSocket.EventClose += (object sender, PEventArgs e) =>\r\n\t{\r\n\t\tConsole.WriteLine(e.sender.ToString());\r\n\t};\r\n};\r\n// Запуск серверами с указанным адресом и номером порта с 2 потоками обработки подключений\r\nWServer Server = new WServer(\"0.0.0.0\", 8081, 2);\r\n```\r\n<div>Отладочная информация</div>\r\n<img src=\"https://github.com/jackyt1988t/WebSocket/blob/master/MyWebSocketDebug.png\" alt=\"Отладочная информация\">\r\n<div>\r\n\tСредствами сервера можно отдавать статические фалы по http протоколу\r\n\tКак и для WebSocket необходимо зарегистрировать обработчик события полученного запроса\r\n</div>\r\n```C#\r\n// Обрабатываем новый http запрос\r\nHTTP.EventConnect += (object obj, PEventArgs a) =>\r\n{\r\n\t// Объект Http\r\n\tHTTP Http = obj as HTTP;\r\n\t\r\n\tswitch (Http.Request.Path)\r\n\t{\r\n\t\tcase \"/\":\r\n\t\t  \t// отправляем index.html\r\n\t\t\tHttp.File(\"Html/index.html\", \"html\");\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tHttp.File(\"Html\" + Http.Request.Path, Http.Request.File);\r\n\t\t\tbreak;\r\n\t}\r\n\t// Вывод информации о полученных заголовках\r\n\tConsole.WriteLine(Http.Request.ToString());\r\n};\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}